{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/personal project/frontend/knoweach/src/Fielddetails.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Field from './Field';\nimport './Fielddetails.css';\nimport Member from './Member';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Fielddetails({\n  fieldname\n}) {\n  _s();\n\n  const [data, setData] = useState([]); //Now what i shoud do is i should make the name of the filed as dynamic so that we can access the Opensourse or Amhacks or CP anything.\n  //Now we can add this query dynamically by that dollar and it should be enclosed in semicolon bcz i had seen an error in netwok tab of inspect saying that we need string.\n\n  const query = `query{\n        categoryByName(name:\"${fieldname}\"){\n          members{\n           name\n           image\n           intro\n           description\n           githubusername\n           discordusername\n           email\n           phone\n         }\n       }\n     }`;\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setData(data.data.categoryByName.members));\n  }, []);\n  console.log(data);\n  let memberboard = [];\n\n  for (let row = 0; row < data.length; row++) {\n    memberboard[row] = /*#__PURE__*/_jsxDEV(Member, {\n      name: data[row]['name'],\n      image: \"https://www.w3schools.com/w3css/img_avatar3.png\",\n      intro: data[row]['intro']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"members\",\n    children: memberboard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Fielddetails, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Fielddetails;\nexport default Fielddetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fielddetails\");","map":{"version":3,"sources":["/home/pranav/Desktop/personal project/frontend/knoweach/src/Fielddetails.js"],"names":["React","Field","Member","useState","useEffect","Link","Fielddetails","fieldname","data","setData","query","sendingPost","method","headers","body","JSON","stringify","fetch","then","response","json","categoryByName","members","console","log","memberboard","row","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAmC;AAAA;;AAE/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAF+B,CAG/B;AAEA;;AACA,QAAMO,KAAK,GAAI;AACnB,+BAA+BH,SAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAbI;AAgBAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMO,WAAW,GAAG;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFO;AAIhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACN,QAAAA;AAAD,OAAf;AAJU,KAApB;AAOCO,IAAAA,KAAK,CAAC,+BAAD,EAAkCN,WAAlC,CAAL,CACIO,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESV,IAAI,IAAIC,OAAO,CAACD,IAAI,CAACA,IAAL,CAAUa,cAAV,CAAyBC,OAA1B,CAFxB;AAGJ,GAXQ,EAWP,EAXO,CAAT;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AAEA,MAAIiB,WAAW,GAAG,EAAlB;;AACA,OAAI,IAAIC,GAAG,GAAC,CAAZ,EAAcA,GAAG,GAAClB,IAAI,CAACmB,MAAvB,EAA8BD,GAAG,EAAjC,EAAoC;AAChCD,IAAAA,WAAW,CAACC,GAAD,CAAX,gBACA,QAAC,MAAD;AACI,MAAA,IAAI,EAAElB,IAAI,CAACkB,GAAD,CAAJ,CAAU,MAAV,CADV;AAEI,MAAA,KAAK,EAAC,iDAFV;AAGI,MAAA,KAAK,EAAElB,IAAI,CAACkB,GAAD,CAAJ,CAAU,OAAV;AAHX;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AAED,sBAEI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,cACKD;AADL;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH;;GArDQnB,Y;;KAAAA,Y;AAuDT,eAAeA,YAAf","sourcesContent":["import React from 'react'\nimport Field from './Field'\nimport './Fielddetails.css'\nimport Member from './Member'\nimport {useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom'\n\n\nfunction Fielddetails({fieldname}) {\n\n    const [data, setData] = useState([]);\n    //Now what i shoud do is i should make the name of the filed as dynamic so that we can access the Opensourse or Amhacks or CP anything.\n\n    //Now we can add this query dynamically by that dollar and it should be enclosed in semicolon bcz i had seen an error in netwok tab of inspect saying that we need string.\n    const query = `query{\n        categoryByName(name:\"${fieldname}\"){\n          members{\n           name\n           image\n           intro\n           description\n           githubusername\n           discordusername\n           email\n           phone\n         }\n       }\n     }`\n\n\n    useEffect(() => {\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n\n            body: JSON.stringify({query}),\n        };\n\n         fetch('http://127.0.0.1:8000/graphql', sendingPost)\n            .then(response => response.json())\n            .then(data => setData(data.data.categoryByName.members));\n    },[])\n\n    console.log(data);\n\n    let memberboard = []\n    for(let row=0;row<data.length;row++){\n        memberboard[row]=\n        <Member\n            name={data[row]['name']}\n            image='https://www.w3schools.com/w3css/img_avatar3.png'\n            intro={data[row]['intro']}\n        />\n    }\n\n    return (\n\n        <div className='members'>\n            {memberboard}\n        </div>\n    )\n}\n\nexport default Fielddetails            "]},"metadata":{},"sourceType":"module"}
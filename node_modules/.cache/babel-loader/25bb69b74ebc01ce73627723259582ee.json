{"ast":null,"code":"var _jsxFileName = \"/home/pranav/Desktop/personal project/frontend/knoweach/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Field from './Field';\nimport './Home.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  //This is to request the server to send \n  //the data from the server by posting a\n  //query.\n  const [data, setData] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    const sendingPost = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: '{\"query\": \"{allCategories{id,name,stackImage}}\"}'\n    };\n    fetch('http://127.0.0.1:8000/graphql', sendingPost).then(response => response.json()).then(data => setData(data.data.allCategories));\n  }, []);\n  console.log(data); //Posting is till here.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TwitterTimelineEmbed, {\n        className: \"twitterfeed\",\n        sourceType: \"profile\",\n        screenName: \"amfoss_in\",\n        theme: \"dark\",\n        noFooter: true,\n        options: {\n          height: 900\n        },\n        noScrollbar: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"searchbar_home\",\n          type: \"text\",\n          placeholder: \"Search member\",\n          onChange: event => {\n            setSearchTerm(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"landing_image\",\n        src: \"https://i.postimg.cc/yxsJ61rG/4380-removebg-preview.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fields\",\n        children: //Here this filter is for showing data according to the serachbar text.\n        //There we are providing like if it is empty show all the fields or else \n        //show the field which that text as subpart it shows even it is lowercase \n        //as we are proving it to lowercase.\n        data.filter(field => {\n          if (searchTerm == '') {\n            return field;\n          } else if (field.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return field;\n          }\n        }).map(field => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/fielddetails/${field.id}`,\n          style: {\n            textDecoration: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Field, {\n            className: \"field\",\n            stack_image: field.stackImage,\n            name: field.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upcomming Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"0+jwTtTcnAp5QOon8fym398Wnt8=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/pranav/Desktop/personal project/frontend/knoweach/src/Home.js"],"names":["React","Field","useState","useEffect","Link","TwitterTimelineEmbed","TwitterShareButton","TwitterFollowButton","TwitterHashtagButton","TwitterMentionButton","TwitterTweetEmbed","TwitterMomentShare","TwitterDMButton","TwitterVideoEmbed","TwitterOnAirButton","Home","data","setData","searchTerm","setSearchTerm","sendingPost","method","headers","body","fetch","then","response","json","allCategories","console","log","height","event","target","value","filter","field","name","toLowerCase","includes","map","id","textDecoration","stackImage"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Field from './Field'\nimport './Home.css'\nimport {useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\n\n\nfunction Home() {\n\n    //This is to request the server to send \n    //the data from the server by posting a\n    //query.\n    const [data, setData] = useState([]); \n    const [searchTerm,setSearchTerm] = useState('')\n\n    useEffect(() => {\n        const sendingPost = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n\n            body: '{\"query\": \"{allCategories{id,name,stackImage}}\"}'\n        };\n\n         fetch('http://127.0.0.1:8000/graphql', sendingPost)\n            .then(response => response.json())\n            .then(data => setData(data.data.allCategories));\n    },[])\n    console.log(data);\n\n    //Posting is till here.\n\n    return (\n        <div className='home'>\n            <div>\n            <TwitterTimelineEmbed\n            className='twitterfeed'\n            sourceType=\"profile\"\n            screenName=\"amfoss_in\"\n            theme='dark'\n            noFooter\n            options={{height: 900}}\n            noScrollbar\n            />\n            </div>\n            <div className='home_2'>\n            <div>\n                <input className='searchbar_home' type='text' placeholder='Search member' onChange={ event => {setSearchTerm(event.target.value)}}/>\n            </div>\n            <img className='landing_image' src='https://i.postimg.cc/yxsJ61rG/4380-removebg-preview.png'/>\n            <div className='fields'>\n                {\n//Here this filter is for showing data according to the serachbar text.\n//There we are providing like if it is empty show all the fields or else \n//show the field which that text as subpart it shows even it is lowercase \n//as we are proving it to lowercase.\n                data.filter(\n                    (field)=>{\n                        if(searchTerm==''){\n                            return field\n                        }else if(field.name.toLowerCase().includes(searchTerm.toLowerCase())){\n                            return field\n                        }\n                    }\n                ).map((field) => (\n                        <Link to={`/fielddetails/${field.id}`} style={{textDecoration:'none'}}>\n                            <Field className='field'\n                            stack_image={field.stackImage}\n                            name={field.name}\n                            />\n                        </Link>\n                ))\n            }\n            </div>\n            \n            <div className='upcomming Events'>\n           \n            </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}
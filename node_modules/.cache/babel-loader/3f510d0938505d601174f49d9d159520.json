{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: !0\n});\n\nvar VALIDATOR_ARG_ERROR_MESSAGE = 'The typeValidator argument must be a function with the signature function(props, propName, componentName).',\n    MESSAGE_ARG_ERROR_MESSAGE = 'The error message is optional, but must be a string if provided.',\n    propIsRequired = function propIsRequired(a, b, c, d) {\n  if ('boolean' == typeof a) return a;\n  return 'function' == typeof a ? a(b, c, d) : !(!0 !== !!a) && !!a;\n},\n    propExists = function propExists(a, b) {\n  return Object.hasOwnProperty.call(a, b);\n},\n    missingPropError = function missingPropError(a, b, c, d) {\n  return d ? new Error(d) : new Error('Required ' + a[b] + ' `' + b + '`' + (' was not specified in `' + c + '`.'));\n},\n    guardAgainstInvalidArgTypes = function guardAgainstInvalidArgTypes(a, b) {\n  if ('function' != typeof a) throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);\n  if (!!b && 'string' != typeof b) throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);\n},\n    isRequiredIf = function isRequiredIf(a, b, c) {\n  return guardAgainstInvalidArgTypes(a, c), function (d, e, f) {\n    for (var _len = arguments.length, g = Array(3 < _len ? _len - 3 : 0), _key = 3; _key < _len; _key++) g[_key - 3] = arguments[_key];\n\n    return propIsRequired(b, d, e, f) ? propExists(d, e) ? a.apply(void 0, [d, e, f].concat(g)) : missingPropError(d, e, f, c) : a.apply(void 0, [d, e, f].concat(g)); // Is not required, so just run typeValidator.\n  };\n};\n\nexports.default = isRequiredIf;","map":{"version":3,"sources":["../isRequiredIf.js"],"names":[],"mappings":";;;;;;AAAA,IAAM,2BAAA,GAAN,4GAAA;AAAA,IAIM,yBAAA,GAJN,kEAAA;AAAA,IAOM,cAAA,GAAA,SAAA,cAAA,CAAiB,CAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAiB,CAAjB,EAAgE;AACpE,MAAI,aAAA,OAAJ,CAAA,EACE,OAAA,CAAA;AAFkE,SAGzD,cAAA,OAHyD,CAGzD,GACF,CAAA,CAAA,CAAA,EAAA,CAAA,EAJ2D,CAI3D,CADE,GAHyD,EAKzD,CAAA,CAAA,KAAA,CAAA,CALyD,CAAA,KAAA,CAAA,CAMnD,CANmD;AAPtE,CAAA;AAAA,IAmBM,UAAA,GAAA,SAAA,UAAA,CAAa,CAAb,EAAa,CAAb,EAAa;AAAA,SAAqB,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAArB,CAAqB,CAArB;AAnBnB,CAAA;AAAA,IAqBM,gBAAA,GAAA,SAAA,gBAAA,CAAmB,CAAnB,EAAmB,CAAnB,EAAmB,CAAnB,EAAmB,CAAnB,EAAgE;AAAA,SAChE,CADgE,GAE3D,IAAA,KAAA,CAF2D,CAE3D,CAF2D,GAK7D,IAAA,KAAA,CACL,cAAY,CAAA,CAAZ,CAAY,CAAZ,GAAA,IAAA,GAAA,CAAA,GAAA,GAAA,IAAA,4BAAA,CAAA,GADK,IACL,CADK,CAL6D;AArBtE,CAAA;AAAA,IAgCM,2BAAA,GAAA,SAAA,2BAAA,CAA8B,CAA9B,EAA8B,CAA9B,EAA0D;AAC9D,MAAI,cAAA,OAAJ,CAAA,EACE,MAAM,IAAA,SAAA,CAAN,2BAAM,CAAN;AAGF,MAAI,CAAA,CAAA,CAAA,IAAoB,YAAA,OAAxB,CAAA,EACE,MAAM,IAAA,SAAA,CAAA,yBAAA,CAAN;AAtCJ,CAAA;AAAA,IA0CM,YAAA,GAAA,SAAA,YAAA,CAAe,CAAf,EAAe,CAAf,EAAe,CAAf,EAAsD;AAC1D,SAAA,2BAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAEO,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAA6C;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAT,CAAS,GAAA,KAAA,CAAA,IAAA,IAAA,GAAA,IAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAT,CAAS,CAAA,IAAA,GAAA,CAAA,CAAT,GAAS,SAAA,CAAA,IAAA,CAAT;;AAAS,WAC9C,cAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAD8C,CAC9C,CAAA,GACE,UAAA,CAAA,CAAA,EAF4C,CAE5C,CAAA,GACK,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAHuC,CAGvC,CAAA,CADL,GAIG,gBAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EANyC,CAMzC,CALL,GASG,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAV2C,CAU3C,CAAA,CAV2C,CAAA,CASlD;AAGH,GAdC;AA3CF,CAAA;;kBA2De,Y","sourcesContent":["const VALIDATOR_ARG_ERROR_MESSAGE =\n  'The typeValidator argument must be a function ' +\n  'with the signature function(props, propName, componentName).';\n\nconst MESSAGE_ARG_ERROR_MESSAGE =\n  'The error message is optional, but must be a string if provided.';\n\nconst propIsRequired = (condition, props, propName, componentName) => {\n  if (typeof condition === 'boolean') {\n    return condition;\n  } else if (typeof condition === 'function') {\n    return condition(props, propName, componentName);\n  } else if (Boolean(condition) === true) {\n    return Boolean(condition);\n  }\n\n  return false;\n};\n\nconst propExists = (props, propName) => Object.hasOwnProperty.call(props, propName);\n\nconst missingPropError = (props, propName, componentName, message) => {\n  if (message) {\n    return new Error(message);\n  }\n\n  return new Error(\n    `Required ${props[propName]} \\`${propName}\\`` +\n    ` was not specified in \\`${componentName}\\`.`,\n  );\n};\n\nconst guardAgainstInvalidArgTypes = (typeValidator, message) => {\n  if (typeof typeValidator !== 'function') {\n    throw new TypeError(VALIDATOR_ARG_ERROR_MESSAGE);\n  }\n\n  if (Boolean(message) && typeof message !== 'string') {\n    throw new TypeError(MESSAGE_ARG_ERROR_MESSAGE);\n  }\n};\n\nconst isRequiredIf = (typeValidator, condition, message) => {\n  guardAgainstInvalidArgTypes(typeValidator, message);\n\n  return (props, propName, componentName, ...rest) => {\n    if (propIsRequired(condition, props, propName, componentName)) {\n      if (propExists(props, propName)) {\n        return typeValidator(props, propName, componentName, ...rest);\n      }\n\n      return missingPropError(props, propName, componentName, message);\n    }\n\n    // Is not required, so just run typeValidator.\n    return typeValidator(props, propName, componentName, ...rest);\n  };\n};\n\nexport default isRequiredIf;\n"]},"metadata":{},"sourceType":"script"}